# Generated from cwl.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2/")
        buf.write("\u01bd\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3")
        buf.write("\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5")
        buf.write("\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$")
        buf.write("\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3")
        buf.write(")\3)\3)\3*\6*\u019d\n*\r*\16*\u019e\3+\3+\7+\u01a3\n+")
        buf.write("\f+\16+\u01a6\13+\3+\3+\3,\5,\u01ab\n,\3,\3,\6,\u01af")
        buf.write("\n,\r,\16,\u01b0\3,\3,\3-\6-\u01b6\n-\r-\16-\u01b7\3.")
        buf.write("\3.\3.\3.\3\u01a4\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2\4\5\2\60\61C\\")
        buf.write("c|\3\2\62;\2\u01c2\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2")
        buf.write("\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\3]\3\2\2\2\5w\3\2\2\2\7\u0087\3\2\2\2\t\u008e")
        buf.write("\3\2\2\2\13\u0093\3\2\2\2\r\u00a0\3\2\2\2\17\u00a8\3\2")
        buf.write("\2\2\21\u00ab\3\2\2\2\23\u00b4\3\2\2\2\25\u00bb\3\2\2")
        buf.write("\2\27\u00bd\3\2\2\2\31\u00c2\3\2\2\2\33\u00c4\3\2\2\2")
        buf.write("\35\u00c6\3\2\2\2\37\u00cc\3\2\2\2!\u00d1\3\2\2\2#\u00d9")
        buf.write("\3\2\2\2%\u00df\3\2\2\2\'\u00e4\3\2\2\2)\u00ec\3\2\2\2")
        buf.write("+\u00f3\3\2\2\2-\u00f9\3\2\2\2/\u0100\3\2\2\2\61\u0107")
        buf.write("\3\2\2\2\63\u010d\3\2\2\2\65\u0110\3\2\2\2\67\u0112\3")
        buf.write("\2\2\29\u0120\3\2\2\2;\u012a\3\2\2\2=\u0132\3\2\2\2?\u0137")
        buf.write("\3\2\2\2A\u0145\3\2\2\2C\u014c\3\2\2\2E\u0155\3\2\2\2")
        buf.write("G\u0165\3\2\2\2I\u0172\3\2\2\2K\u0179\3\2\2\2M\u0181\3")
        buf.write("\2\2\2O\u018a\3\2\2\2Q\u0196\3\2\2\2S\u019c\3\2\2\2U\u01a0")
        buf.write("\3\2\2\2W\u01ae\3\2\2\2Y\u01b5\3\2\2\2[\u01b9\3\2\2\2")
        buf.write("]^\7%\2\2^_\7#\2\2_`\7\61\2\2`a\7w\2\2ab\7u\2\2bc\7t\2")
        buf.write("\2cd\7\61\2\2de\7d\2\2ef\7k\2\2fg\7p\2\2gh\7\61\2\2hi")
        buf.write("\7g\2\2ij\7p\2\2jk\7x\2\2kl\7\"\2\2lm\7e\2\2mn\7y\2\2")
        buf.write("no\7n\2\2op\7/\2\2pq\7t\2\2qr\7w\2\2rs\7p\2\2st\7p\2\2")
        buf.write("tu\7g\2\2uv\7t\2\2v\4\3\2\2\2wx\7e\2\2xy\7n\2\2yz\7c\2")
        buf.write("\2z{\7u\2\2{|\7u\2\2|}\7<\2\2}~\7\"\2\2~\177\7Y\2\2\177")
        buf.write("\u0080\7q\2\2\u0080\u0081\7t\2\2\u0081\u0082\7m\2\2\u0082")
        buf.write("\u0083\7h\2\2\u0083\u0084\7n\2\2\u0084\u0085\7q\2\2\u0085")
        buf.write("\u0086\7y\2\2\u0086\6\3\2\2\2\u0087\u0088\7n\2\2\u0088")
        buf.write("\u0089\7c\2\2\u0089\u008a\7d\2\2\u008a\u008b\7g\2\2\u008b")
        buf.write("\u008c\7n\2\2\u008c\u008d\7<\2\2\u008d\b\3\2\2\2\u008e")
        buf.write("\u008f\7f\2\2\u008f\u0090\7q\2\2\u0090\u0091\7e\2\2\u0091")
        buf.write("\u0092\7<\2\2\u0092\n\3\2\2\2\u0093\u0094\7f\2\2\u0094")
        buf.write("\u0095\7g\2\2\u0095\u0096\7u\2\2\u0096\u0097\7e\2\2\u0097")
        buf.write("\u0098\7t\2\2\u0098\u0099\7k\2\2\u0099\u009a\7r\2\2\u009a")
        buf.write("\u009b\7v\2\2\u009b\u009c\7k\2\2\u009c\u009d\7q\2\2\u009d")
        buf.write("\u009e\7p\2\2\u009e\u009f\7<\2\2\u009f\f\3\2\2\2\u00a0")
        buf.write("\u00a1\7k\2\2\u00a1\u00a2\7p\2\2\u00a2\u00a3\7r\2\2\u00a3")
        buf.write("\u00a4\7w\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7u\2\2\u00a6")
        buf.write("\u00a7\7<\2\2\u00a7\16\3\2\2\2\u00a8\u00a9\7]\2\2\u00a9")
        buf.write("\u00aa\7_\2\2\u00aa\20\3\2\2\2\u00ab\u00ac\7q\2\2\u00ac")
        buf.write("\u00ad\7w\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af\7r\2\2\u00af")
        buf.write("\u00b0\7w\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7u\2\2\u00b2")
        buf.write("\u00b3\7<\2\2\u00b3\22\3\2\2\2\u00b4\u00b5\7u\2\2\u00b5")
        buf.write("\u00b6\7v\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7r\2\2\u00b8")
        buf.write("\u00b9\7u\2\2\u00b9\u00ba\7<\2\2\u00ba\24\3\2\2\2\u00bb")
        buf.write("\u00bc\7<\2\2\u00bc\26\3\2\2\2\u00bd\u00be\7k\2\2\u00be")
        buf.write("\u00bf\7p\2\2\u00bf\u00c0\7<\2\2\u00c0\u00c1\7\"\2\2\u00c1")
        buf.write("\30\3\2\2\2\u00c2\u00c3\7]\2\2\u00c3\32\3\2\2\2\u00c4")
        buf.write("\u00c5\7_\2\2\u00c5\34\3\2\2\2\u00c6\u00c7\7q\2\2\u00c7")
        buf.write("\u00c8\7w\2\2\u00c8\u00c9\7v\2\2\u00c9\u00ca\7<\2\2\u00ca")
        buf.write("\u00cb\7\"\2\2\u00cb\36\3\2\2\2\u00cc\u00cd\7t\2\2\u00cd")
        buf.write("\u00ce\7w\2\2\u00ce\u00cf\7p\2\2\u00cf\u00d0\7<\2\2\u00d0")
        buf.write(" \3\2\2\2\u00d1\u00d2\7u\2\2\u00d2\u00d3\7q\2\2\u00d3")
        buf.write("\u00d4\7w\2\2\u00d4\u00d5\7t\2\2\u00d5\u00d6\7e\2\2\u00d6")
        buf.write("\u00d7\7g\2\2\u00d7\u00d8\7<\2\2\u00d8\"\3\2\2\2\u00d9")
        buf.write("\u00da\7v\2\2\u00da\u00db\7{\2\2\u00db\u00dc\7r\2\2\u00dc")
        buf.write("\u00dd\7g\2\2\u00dd\u00de\7<\2\2\u00de$\3\2\2\2\u00df")
        buf.write("\u00e0\7H\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7n\2\2\u00e2")
        buf.write("\u00e3\7g\2\2\u00e3&\3\2\2\2\u00e4\u00e5\7k\2\2\u00e5")
        buf.write("\u00e6\7p\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7g\2\2\u00e8")
        buf.write("\u00e9\7i\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7t\2\2\u00eb")
        buf.write("(\3\2\2\2\u00ec\u00ed\7u\2\2\u00ed\u00ee\7v\2\2\u00ee")
        buf.write("\u00ef\7t\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1\7p\2\2\u00f1")
        buf.write("\u00f2\7i\2\2\u00f2*\3\2\2\2\u00f3\u00f4\7h\2\2\u00f4")
        buf.write("\u00f5\7n\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7\7c\2\2\u00f7")
        buf.write("\u00f8\7v\2\2\u00f8,\3\2\2\2\u00f9\u00fa\7f\2\2\u00fa")
        buf.write("\u00fb\7q\2\2\u00fb\u00fc\7w\2\2\u00fc\u00fd\7d\2\2\u00fd")
        buf.write("\u00fe\7n\2\2\u00fe\u00ff\7g\2\2\u00ff.\3\2\2\2\u0100")
        buf.write("\u0101\7u\2\2\u0101\u0102\7v\2\2\u0102\u0103\7f\2\2\u0103")
        buf.write("\u0104\7q\2\2\u0104\u0105\7w\2\2\u0105\u0106\7v\2\2\u0106")
        buf.write("\60\3\2\2\2\u0107\u0108\7u\2\2\u0108\u0109\7v\2\2\u0109")
        buf.write("\u010a\7f\2\2\u010a\u010b\7k\2\2\u010b\u010c\7p\2\2\u010c")
        buf.write("\62\3\2\2\2\u010d\u010e\7$\2\2\u010e\u010f\7%\2\2\u010f")
        buf.write("\64\3\2\2\2\u0110\u0111\7$\2\2\u0111\66\3\2\2\2\u0112")
        buf.write("\u0113\7k\2\2\u0113\u0114\7p\2\2\u0114\u0115\7r\2\2\u0115")
        buf.write("\u0116\7w\2\2\u0116\u0117\7v\2\2\u0117\u0118\7D\2\2\u0118")
        buf.write("\u0119\7k\2\2\u0119\u011a\7p\2\2\u011a\u011b\7f\2\2\u011b")
        buf.write("\u011c\7k\2\2\u011c\u011d\7p\2\2\u011d\u011e\7i\2\2\u011e")
        buf.write("\u011f\7<\2\2\u011f8\3\2\2\2\u0120\u0121\7r\2\2\u0121")
        buf.write("\u0122\7q\2\2\u0122\u0123\7u\2\2\u0123\u0124\7k\2\2\u0124")
        buf.write("\u0125\7v\2\2\u0125\u0126\7k\2\2\u0126\u0127\7q\2\2\u0127")
        buf.write("\u0128\7p\2\2\u0128\u0129\7<\2\2\u0129:\3\2\2\2\u012a")
        buf.write("\u012b\7r\2\2\u012b\u012c\7t\2\2\u012c\u012d\7g\2\2\u012d")
        buf.write("\u012e\7h\2\2\u012e\u012f\7k\2\2\u012f\u0130\7z\2\2\u0130")
        buf.write("\u0131\7<\2\2\u0131<\3\2\2\2\u0132\u0133\7/\2\2\u0133")
        buf.write("\u0134\7k\2\2\u0134\u0135\7f\2\2\u0135\u0136\7<\2\2\u0136")
        buf.write(">\3\2\2\2\u0137\u0138\7q\2\2\u0138\u0139\7w\2\2\u0139")
        buf.write("\u013a\7v\2\2\u013a\u013b\7r\2\2\u013b\u013c\7w\2\2\u013c")
        buf.write("\u013d\7v\2\2\u013d\u013e\7U\2\2\u013e\u013f\7q\2\2\u013f")
        buf.write("\u0140\7w\2\2\u0140\u0141\7t\2\2\u0141\u0142\7e\2\2\u0142")
        buf.write("\u0143\7g\2\2\u0143\u0144\7<\2\2\u0144@\3\2\2\2\u0145")
        buf.write("\u0146\7e\2\2\u0146\u0147\7n\2\2\u0147\u0148\7c\2\2\u0148")
        buf.write("\u0149\7u\2\2\u0149\u014a\7u\2\2\u014a\u014b\7<\2\2\u014b")
        buf.write("B\3\2\2\2\u014c\u014d\7Y\2\2\u014d\u014e\7q\2\2\u014e")
        buf.write("\u014f\7t\2\2\u014f\u0150\7m\2\2\u0150\u0151\7h\2\2\u0151")
        buf.write("\u0152\7n\2\2\u0152\u0153\7q\2\2\u0153\u0154\7y\2\2\u0154")
        buf.write("D\3\2\2\2\u0155\u0156\7E\2\2\u0156\u0157\7q\2\2\u0157")
        buf.write("\u0158\7o\2\2\u0158\u0159\7o\2\2\u0159\u015a\7c\2\2\u015a")
        buf.write("\u015b\7p\2\2\u015b\u015c\7f\2\2\u015c\u015d\7N\2\2\u015d")
        buf.write("\u015e\7k\2\2\u015e\u015f\7p\2\2\u015f\u0160\7g\2\2\u0160")
        buf.write("\u0161\7V\2\2\u0161\u0162\7q\2\2\u0162\u0163\7q\2\2\u0163")
        buf.write("\u0164\7n\2\2\u0164F\3\2\2\2\u0165\u0166\7d\2\2\u0166")
        buf.write("\u0167\7c\2\2\u0167\u0168\7u\2\2\u0168\u0169\7g\2\2\u0169")
        buf.write("\u016a\7E\2\2\u016a\u016b\7q\2\2\u016b\u016c\7o\2\2\u016c")
        buf.write("\u016d\7o\2\2\u016d\u016e\7c\2\2\u016e\u016f\7p\2\2\u016f")
        buf.write("\u0170\7f\2\2\u0170\u0171\7<\2\2\u0171H\3\2\2\2\u0172")
        buf.write("\u0173\7u\2\2\u0173\u0174\7v\2\2\u0174\u0175\7f\2\2\u0175")
        buf.write("\u0176\7k\2\2\u0176\u0177\7p\2\2\u0177\u0178\7<\2\2\u0178")
        buf.write("J\3\2\2\2\u0179\u017a\7u\2\2\u017a\u017b\7v\2\2\u017b")
        buf.write("\u017c\7f\2\2\u017c\u017d\7q\2\2\u017d\u017e\7w\2\2\u017e")
        buf.write("\u017f\7v\2\2\u017f\u0180\7<\2\2\u0180L\3\2\2\2\u0181")
        buf.write("\u0182\7f\2\2\u0182\u0183\7g\2\2\u0183\u0184\7h\2\2\u0184")
        buf.write("\u0185\7c\2\2\u0185\u0186\7w\2\2\u0186\u0187\7n\2\2\u0187")
        buf.write("\u0188\7v\2\2\u0188\u0189\7<\2\2\u0189N\3\2\2\2\u018a")
        buf.write("\u018b\7e\2\2\u018b\u018c\7y\2\2\u018c\u018d\7n\2\2\u018d")
        buf.write("\u018e\7X\2\2\u018e\u018f\7g\2\2\u018f\u0190\7t\2\2\u0190")
        buf.write("\u0191\7u\2\2\u0191\u0192\7k\2\2\u0192\u0193\7q\2\2\u0193")
        buf.write("\u0194\7p\2\2\u0194\u0195\7<\2\2\u0195P\3\2\2\2\u0196")
        buf.write("\u0197\7x\2\2\u0197\u0198\7\63\2\2\u0198\u0199\7\60\2")
        buf.write("\2\u0199\u019a\7\62\2\2\u019aR\3\2\2\2\u019b\u019d\t\2")
        buf.write("\2\2\u019c\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019c")
        buf.write("\3\2\2\2\u019e\u019f\3\2\2\2\u019fT\3\2\2\2\u01a0\u01a4")
        buf.write("\7$\2\2\u01a1\u01a3\13\2\2\2\u01a2\u01a1\3\2\2\2\u01a3")
        buf.write("\u01a6\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a4\u01a2\3\2\2\2")
        buf.write("\u01a5\u01a7\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a7\u01a8\7")
        buf.write("$\2\2\u01a8V\3\2\2\2\u01a9\u01ab\7\17\2\2\u01aa\u01a9")
        buf.write("\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac")
        buf.write("\u01af\7\f\2\2\u01ad\u01af\7\17\2\2\u01ae\u01aa\3\2\2")
        buf.write("\2\u01ae\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2\u01b0\u01ae")
        buf.write("\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2")
        buf.write("\u01b3\b,\2\2\u01b3X\3\2\2\2\u01b4\u01b6\t\3\2\2\u01b5")
        buf.write("\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b5\3\2\2\2")
        buf.write("\u01b7\u01b8\3\2\2\2\u01b8Z\3\2\2\2\u01b9\u01ba\7\"\2")
        buf.write("\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\b.\2\2\u01bc\\\3\2")
        buf.write("\2\2\t\2\u019e\u01a4\u01aa\u01ae\u01b0\u01b7\3\b\2\2")
        return buf.getvalue()


class cwlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    WORD = 41
    STRING = 42
    NEWLINE = 43
    NUMBER = 44
    WHITESPACE = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#!/usr/bin/env cwl-runner'", "'class: Workflow'", "'label:'", 
            "'doc:'", "'description:'", "'inputs:'", "'[]'", "'outputs:'", 
            "'steps:'", "':'", "'in: '", "'['", "']'", "'out: '", "'run:'", 
            "'source:'", "'type:'", "'File'", "'integer'", "'string'", "'float'", 
            "'double'", "'stdout'", "'stdin'", "'\"#'", "'\"'", "'inputBinding:'", 
            "'position:'", "'prefix:'", "'-id:'", "'outputSource:'", "'class:'", 
            "'Workflow'", "'CommandLineTool'", "'baseCommand:'", "'stdin:'", 
            "'stdout:'", "'default:'", "'cwlVersion:'", "'v1.0'", "' '" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "STRING", "NEWLINE", "NUMBER", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "WORD", "STRING", "NEWLINE", "NUMBER", 
                  "WHITESPACE" ]

    grammarFileName = "cwl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


