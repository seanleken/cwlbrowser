# Generated from cwl.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2*")
        buf.write("\u0190\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3")
        buf.write("\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3")
        buf.write("\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3%\6%\u0170\n%\r%\16%\u0171")
        buf.write("\3&\3&\7&\u0176\n&\f&\16&\u0179\13&\3&\3&\3\'\5\'\u017e")
        buf.write("\n\'\3\'\3\'\6\'\u0182\n\'\r\'\16\'\u0183\3\'\3\'\3(\6")
        buf.write("(\u0189\n(\r(\16(\u018a\3)\3)\3)\3)\3\u0177\2*\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*\3\2\4")
        buf.write("\7\2))\60\60C\\c|~~\3\2\62;\2\u0195\2\3\3\2\2\2\2\5\3")
        buf.write("\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2")
        buf.write("\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2")
        buf.write("\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2")
        buf.write("\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2")
        buf.write("\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3")
        buf.write("\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2")
        buf.write("\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2")
        buf.write("\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3")
        buf.write("\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\3S\3\2\2\2\5m\3\2\2\2\7}")
        buf.write("\3\2\2\2\t\u0084\3\2\2\2\13\u0089\3\2\2\2\r\u0096\3\2")
        buf.write("\2\2\17\u009e\3\2\2\2\21\u00a1\3\2\2\2\23\u00aa\3\2\2")
        buf.write("\2\25\u00b1\3\2\2\2\27\u00b3\3\2\2\2\31\u00b8\3\2\2\2")
        buf.write("\33\u00be\3\2\2\2\35\u00c3\3\2\2\2\37\u00cb\3\2\2\2!\u00d1")
        buf.write("\3\2\2\2#\u00d6\3\2\2\2%\u00de\3\2\2\2\'\u00e5\3\2\2\2")
        buf.write(")\u00eb\3\2\2\2+\u00f2\3\2\2\2-\u00f5\3\2\2\2/\u00f7\3")
        buf.write("\2\2\2\61\u0105\3\2\2\2\63\u010d\3\2\2\2\65\u0112\3\2")
        buf.write("\2\2\67\u0120\3\2\2\29\u0129\3\2\2\2;\u0139\3\2\2\2=\u0146")
        buf.write("\3\2\2\2?\u014d\3\2\2\2A\u0155\3\2\2\2C\u015e\3\2\2\2")
        buf.write("E\u016a\3\2\2\2G\u016c\3\2\2\2I\u016f\3\2\2\2K\u0173\3")
        buf.write("\2\2\2M\u0181\3\2\2\2O\u0188\3\2\2\2Q\u018c\3\2\2\2ST")
        buf.write("\7%\2\2TU\7#\2\2UV\7\61\2\2VW\7w\2\2WX\7u\2\2XY\7t\2\2")
        buf.write("YZ\7\61\2\2Z[\7d\2\2[\\\7k\2\2\\]\7p\2\2]^\7\61\2\2^_")
        buf.write("\7g\2\2_`\7p\2\2`a\7x\2\2ab\7\"\2\2bc\7e\2\2cd\7y\2\2")
        buf.write("de\7n\2\2ef\7/\2\2fg\7t\2\2gh\7w\2\2hi\7p\2\2ij\7p\2\2")
        buf.write("jk\7g\2\2kl\7t\2\2l\4\3\2\2\2mn\7e\2\2no\7n\2\2op\7c\2")
        buf.write("\2pq\7u\2\2qr\7u\2\2rs\7<\2\2st\7\"\2\2tu\7Y\2\2uv\7q")
        buf.write("\2\2vw\7t\2\2wx\7m\2\2xy\7h\2\2yz\7n\2\2z{\7q\2\2{|\7")
        buf.write("y\2\2|\6\3\2\2\2}~\7n\2\2~\177\7c\2\2\177\u0080\7d\2\2")
        buf.write("\u0080\u0081\7g\2\2\u0081\u0082\7n\2\2\u0082\u0083\7<")
        buf.write("\2\2\u0083\b\3\2\2\2\u0084\u0085\7f\2\2\u0085\u0086\7")
        buf.write("q\2\2\u0086\u0087\7e\2\2\u0087\u0088\7<\2\2\u0088\n\3")
        buf.write("\2\2\2\u0089\u008a\7f\2\2\u008a\u008b\7g\2\2\u008b\u008c")
        buf.write("\7u\2\2\u008c\u008d\7e\2\2\u008d\u008e\7t\2\2\u008e\u008f")
        buf.write("\7k\2\2\u008f\u0090\7r\2\2\u0090\u0091\7v\2\2\u0091\u0092")
        buf.write("\7k\2\2\u0092\u0093\7q\2\2\u0093\u0094\7p\2\2\u0094\u0095")
        buf.write("\7<\2\2\u0095\f\3\2\2\2\u0096\u0097\7k\2\2\u0097\u0098")
        buf.write("\7p\2\2\u0098\u0099\7r\2\2\u0099\u009a\7w\2\2\u009a\u009b")
        buf.write("\7v\2\2\u009b\u009c\7u\2\2\u009c\u009d\7<\2\2\u009d\16")
        buf.write("\3\2\2\2\u009e\u009f\7]\2\2\u009f\u00a0\7_\2\2\u00a0\20")
        buf.write("\3\2\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3\7w\2\2\u00a3\u00a4")
        buf.write("\7v\2\2\u00a4\u00a5\7r\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7")
        buf.write("\7v\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7<\2\2\u00a9\22")
        buf.write("\3\2\2\2\u00aa\u00ab\7u\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad")
        buf.write("\7g\2\2\u00ad\u00ae\7r\2\2\u00ae\u00af\7u\2\2\u00af\u00b0")
        buf.write("\7<\2\2\u00b0\24\3\2\2\2\u00b1\u00b2\7<\2\2\u00b2\26\3")
        buf.write("\2\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7p\2\2\u00b5\u00b6")
        buf.write("\7<\2\2\u00b6\u00b7\7\"\2\2\u00b7\30\3\2\2\2\u00b8\u00b9")
        buf.write("\7q\2\2\u00b9\u00ba\7w\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc")
        buf.write("\7<\2\2\u00bc\u00bd\7\"\2\2\u00bd\32\3\2\2\2\u00be\u00bf")
        buf.write("\7t\2\2\u00bf\u00c0\7w\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2")
        buf.write("\7<\2\2\u00c2\34\3\2\2\2\u00c3\u00c4\7u\2\2\u00c4\u00c5")
        buf.write("\7q\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7\7t\2\2\u00c7\u00c8")
        buf.write("\7e\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7<\2\2\u00ca\36")
        buf.write("\3\2\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7{\2\2\u00cd\u00ce")
        buf.write("\7r\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7<\2\2\u00d0 \3")
        buf.write("\2\2\2\u00d1\u00d2\7H\2\2\u00d2\u00d3\7k\2\2\u00d3\u00d4")
        buf.write("\7n\2\2\u00d4\u00d5\7g\2\2\u00d5\"\3\2\2\2\u00d6\u00d7")
        buf.write("\7k\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da")
        buf.write("\7g\2\2\u00da\u00db\7i\2\2\u00db\u00dc\7g\2\2\u00dc\u00dd")
        buf.write("\7t\2\2\u00dd$\3\2\2\2\u00de\u00df\7u\2\2\u00df\u00e0")
        buf.write("\7v\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3")
        buf.write("\7p\2\2\u00e3\u00e4\7i\2\2\u00e4&\3\2\2\2\u00e5\u00e6")
        buf.write("\7h\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9")
        buf.write("\7c\2\2\u00e9\u00ea\7v\2\2\u00ea(\3\2\2\2\u00eb\u00ec")
        buf.write("\7f\2\2\u00ec\u00ed\7q\2\2\u00ed\u00ee\7w\2\2\u00ee\u00ef")
        buf.write("\7d\2\2\u00ef\u00f0\7n\2\2\u00f0\u00f1\7g\2\2\u00f1*\3")
        buf.write("\2\2\2\u00f2\u00f3\7$\2\2\u00f3\u00f4\7%\2\2\u00f4,\3")
        buf.write("\2\2\2\u00f5\u00f6\7$\2\2\u00f6.\3\2\2\2\u00f7\u00f8\7")
        buf.write("k\2\2\u00f8\u00f9\7p\2\2\u00f9\u00fa\7r\2\2\u00fa\u00fb")
        buf.write("\7w\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7D\2\2\u00fd\u00fe")
        buf.write("\7k\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7f\2\2\u0100\u0101")
        buf.write("\7k\2\2\u0101\u0102\7p\2\2\u0102\u0103\7i\2\2\u0103\u0104")
        buf.write("\7<\2\2\u0104\60\3\2\2\2\u0105\u0106\7r\2\2\u0106\u0107")
        buf.write("\7t\2\2\u0107\u0108\7g\2\2\u0108\u0109\7h\2\2\u0109\u010a")
        buf.write("\7k\2\2\u010a\u010b\7z\2\2\u010b\u010c\7<\2\2\u010c\62")
        buf.write("\3\2\2\2\u010d\u010e\7/\2\2\u010e\u010f\7k\2\2\u010f\u0110")
        buf.write("\7f\2\2\u0110\u0111\7<\2\2\u0111\64\3\2\2\2\u0112\u0113")
        buf.write("\7q\2\2\u0113\u0114\7w\2\2\u0114\u0115\7v\2\2\u0115\u0116")
        buf.write("\7r\2\2\u0116\u0117\7w\2\2\u0117\u0118\7v\2\2\u0118\u0119")
        buf.write("\7U\2\2\u0119\u011a\7q\2\2\u011a\u011b\7w\2\2\u011b\u011c")
        buf.write("\7t\2\2\u011c\u011d\7e\2\2\u011d\u011e\7g\2\2\u011e\u011f")
        buf.write("\7<\2\2\u011f\66\3\2\2\2\u0120\u0121\7Y\2\2\u0121\u0122")
        buf.write("\7q\2\2\u0122\u0123\7t\2\2\u0123\u0124\7m\2\2\u0124\u0125")
        buf.write("\7h\2\2\u0125\u0126\7n\2\2\u0126\u0127\7q\2\2\u0127\u0128")
        buf.write("\7y\2\2\u01288\3\2\2\2\u0129\u012a\7E\2\2\u012a\u012b")
        buf.write("\7q\2\2\u012b\u012c\7o\2\2\u012c\u012d\7o\2\2\u012d\u012e")
        buf.write("\7c\2\2\u012e\u012f\7p\2\2\u012f\u0130\7f\2\2\u0130\u0131")
        buf.write("\7N\2\2\u0131\u0132\7k\2\2\u0132\u0133\7p\2\2\u0133\u0134")
        buf.write("\7g\2\2\u0134\u0135\7V\2\2\u0135\u0136\7q\2\2\u0136\u0137")
        buf.write("\7q\2\2\u0137\u0138\7n\2\2\u0138:\3\2\2\2\u0139\u013a")
        buf.write("\7d\2\2\u013a\u013b\7c\2\2\u013b\u013c\7u\2\2\u013c\u013d")
        buf.write("\7g\2\2\u013d\u013e\7E\2\2\u013e\u013f\7q\2\2\u013f\u0140")
        buf.write("\7o\2\2\u0140\u0141\7o\2\2\u0141\u0142\7c\2\2\u0142\u0143")
        buf.write("\7p\2\2\u0143\u0144\7f\2\2\u0144\u0145\7<\2\2\u0145<\3")
        buf.write("\2\2\2\u0146\u0147\7u\2\2\u0147\u0148\7v\2\2\u0148\u0149")
        buf.write("\7f\2\2\u0149\u014a\7k\2\2\u014a\u014b\7p\2\2\u014b\u014c")
        buf.write("\7<\2\2\u014c>\3\2\2\2\u014d\u014e\7u\2\2\u014e\u014f")
        buf.write("\7v\2\2\u014f\u0150\7f\2\2\u0150\u0151\7q\2\2\u0151\u0152")
        buf.write("\7w\2\2\u0152\u0153\7v\2\2\u0153\u0154\7<\2\2\u0154@\3")
        buf.write("\2\2\2\u0155\u0156\7f\2\2\u0156\u0157\7g\2\2\u0157\u0158")
        buf.write("\7h\2\2\u0158\u0159\7c\2\2\u0159\u015a\7w\2\2\u015a\u015b")
        buf.write("\7n\2\2\u015b\u015c\7v\2\2\u015c\u015d\7<\2\2\u015dB\3")
        buf.write("\2\2\2\u015e\u015f\7e\2\2\u015f\u0160\7y\2\2\u0160\u0161")
        buf.write("\7n\2\2\u0161\u0162\7X\2\2\u0162\u0163\7g\2\2\u0163\u0164")
        buf.write("\7t\2\2\u0164\u0165\7u\2\2\u0165\u0166\7k\2\2\u0166\u0167")
        buf.write("\7q\2\2\u0167\u0168\7p\2\2\u0168\u0169\7<\2\2\u0169D\3")
        buf.write("\2\2\2\u016a\u016b\7x\2\2\u016bF\3\2\2\2\u016c\u016d\7")
        buf.write("\60\2\2\u016dH\3\2\2\2\u016e\u0170\t\2\2\2\u016f\u016e")
        buf.write("\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u016f\3\2\2\2\u0171")
        buf.write("\u0172\3\2\2\2\u0172J\3\2\2\2\u0173\u0177\7$\2\2\u0174")
        buf.write("\u0176\13\2\2\2\u0175\u0174\3\2\2\2\u0176\u0179\3\2\2")
        buf.write("\2\u0177\u0178\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017a")
        buf.write("\3\2\2\2\u0179\u0177\3\2\2\2\u017a\u017b\7$\2\2\u017b")
        buf.write("L\3\2\2\2\u017c\u017e\7\17\2\2\u017d\u017c\3\2\2\2\u017d")
        buf.write("\u017e\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0182\7\f\2\2")
        buf.write("\u0180\u0182\7\17\2\2\u0181\u017d\3\2\2\2\u0181\u0180")
        buf.write("\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u0181\3\2\2\2\u0183")
        buf.write("\u0184\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0186\b\'\2\2")
        buf.write("\u0186N\3\2\2\2\u0187\u0189\t\3\2\2\u0188\u0187\3\2\2")
        buf.write("\2\u0189\u018a\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b")
        buf.write("\3\2\2\2\u018bP\3\2\2\2\u018c\u018d\7\"\2\2\u018d\u018e")
        buf.write("\3\2\2\2\u018e\u018f\b)\2\2\u018fR\3\2\2\2\t\2\u0171\u0177")
        buf.write("\u017d\u0181\u0183\u018a\3\b\2\2")
        return buf.getvalue()


class cwlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    WORD = 36
    STRING = 37
    NEWLINE = 38
    INTEGER = 39
    WHITESPACE = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#!/usr/bin/env cwl-runner'", "'class: Workflow'", "'label:'", 
            "'doc:'", "'description:'", "'inputs:'", "'[]'", "'outputs:'", 
            "'steps:'", "':'", "'in: '", "'out: '", "'run:'", "'source:'", 
            "'type:'", "'File'", "'integer'", "'string'", "'float'", "'double'", 
            "'\"#'", "'\"'", "'inputBinding:'", "'prefix:'", "'-id:'", "'outputSource:'", 
            "'Workflow'", "'CommandLineTool'", "'baseCommand:'", "'stdin:'", 
            "'stdout:'", "'default:'", "'cwlVersion:'", "'v'", "'.'", "' '" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "STRING", "NEWLINE", "INTEGER", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "WORD", "STRING", "NEWLINE", 
                  "INTEGER", "WHITESPACE" ]

    grammarFileName = "cwl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


